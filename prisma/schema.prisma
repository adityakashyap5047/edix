// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid())
  clerkUserId      String   @unique
  name             String
  email            String   @unique
  imageUrl         String?  
  plan             Plan     @default(FREE)
  projectsUsed     Int      @default(0)
  exportsThisMonth Int      @default(0)
  lastWebhookId    String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  projects         Project[]
  folders          Folder[]
}

model Project {
  id                    String   @id @default(uuid())
  title                 String
  userId                String
  canvasState           Json
  width                 Int
  height                Int
  originalImageUrl      String?
  currentImageUrl       String?
  thumbnailUrl          String?
  activeTransformations String?
  backgroundRemoved     Boolean?
  folderId              String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  folder Folder? @relation(fields: [folderId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([userId, updatedAt])
  @@index([folderId])
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  userId    String
  parentId  String?  // For nested folders
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  parent   Folder?   @relation("FolderHierarchy", fields: [parentId], references: [id], onDelete: Cascade)
  children Folder[]  @relation("FolderHierarchy")
  projects Project[]

  @@index([userId])
  @@index([parentId])
  @@index([userId, parentId])
}

enum Plan {
  FREE
  PRO
}